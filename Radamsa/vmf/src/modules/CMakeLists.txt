#===============================================================================
# Vader Modular Fuzzer (VMF)
# Copyright (c) 2021-2023 The Charles Stark Draper Laboratory, Inc.
# <vader@draper.com>
#  
# Effort sponsored by the U.S. Government under Other Transaction number
# W9124P-19-9-0001 between AMTC and the Government. The U.S. Government
# Is authorized to reproduce and distribute reprints for Governmental purposes
# notwithstanding any copyright notation thereon.
#  
# The views and conclusions contained herein are those of the authors and
# should not be interpreted as necessarily representing the official policies
# or endorsements, either expressed or implied, of the U.S. Government.
#  
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 (only) as 
# published by the Free Software Foundation.
#  
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#  
# @license GPL-2.0-only <https://spdx.org/licenses/GPL-2.0-only.html>
#===============================================================================

# Create Radamsa library
add_library(Radamsa SHARED
  common/mutator/RadamsaDropByteMutator.cpp
  common/mutator/RadamsaFlipByteMutator.cpp
  common/mutator/RadamsaInsertByteMutator.cpp
  common/mutator/RadamsaRepeatByteMutator.cpp
  common/mutator/RadamsaPermuteByteMutator.cpp
  common/mutator/RadamsaIncrementByteMutator.cpp
  common/mutator/RadamsaDecrementByteMutator.cpp
  common/mutator/RadamsaRandomizeByteMutator.cpp
  common/mutator/RadamsaDeleteLineMutator.cpp
  common/mutator/RadamsaDeleteSequentialLinesMutator.cpp
  common/mutator/RadamsaDuplicateLineMutator.cpp
  common/mutator/RadamsaCopyLineCloseByMutator.cpp
  common/mutator/RadamsaRepeatLineMutator.cpp
  common/mutator/RadamsaSwapLineMutator.cpp
  common/mutator/RadamsaRepeatByteSequenceMutator.cpp       # -sr
  common/mutator/RadamsaDeleteByteSequenceMutator.cpp       # -sd
  common/mutator/RadamsaPermuteLinesMutator.cpp             # -lp
  common/mutator/RadamsaInsertLineMutator.cpp               # -lis
  common/mutator/RadamsaReplaceLineMutator.cpp              # -lrs
  common/mutator/RadamsaDeleteNodeMutator.cpp               # -td
  common/mutator/RadamsaDuplicateNodeMutator.cpp            # -tr2
  common/mutator/RadamsaReplaceNodeMutator.cpp              # -ts1
  common/mutator/RadamsaSwapNodesMutator.cpp                # -ts2
  common/mutator/RadamsaRepeatPathMutator.cpp               # -tr
  common/mutator/RadamsaWidenCodePointMutator.cpp           # -uw
  common/mutator/RadamsaInsertUnicodeMutator.cpp            # -ui
  common/mutator/RadamsaModifyTextNumberMutator.cpp         # -num
  common/mutator/RadamsaFuseThisMutator.cpp                 # -ft
  common/mutator/RadamsaFuseNextMutator.cpp                 # -fn
  common/mutator/RadamsaFuseOldMutator.cpp                  # -fo
)

# Build-time dependencies for Radamsa
link_directories(Radamsa PRIVATE
)

# Build-time dependencies for Radamsa
target_link_libraries(Radamsa PRIVATE
)

# Build-time dependencies for Radamsa
target_include_directories(Radamsa PRIVATE
  ${VMF_INSTALL}/include
  ${VMF_INSTALL}/include/vmf
  ${VMF_INSTALL}/include/plog
  ${PROJECT_SOURCE_DIR}/src/module
)

# Install Radamsa library in VMF plugins directory
install(TARGETS Radamsa
  LIBRARY DESTINATION "${VMF_INSTALL}/plugins")

